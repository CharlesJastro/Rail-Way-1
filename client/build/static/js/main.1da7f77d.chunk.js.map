{"version":3,"sources":["components/Header/classic_locomotive_train_312396.jpg","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/ListSubItem/ListSubItem.jsx","components/ListItem/ListItem.jsx","views/RoutesList/animation_500_kknnq4t6.gif","views/RoutesList/RoutesList.js","utils/getWeekDay.js","views/Travel/Travel.jsx","views/Travel/TravelStations.jsx","views/Favourites/Favourites.jsx","components/RouteDetails/StationsTable.js","components/RouteDetails/RouteDetails.jsx","components/NotificationItem.jsx","components/NotificationField.jsx","routes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Image","src","trainImg","alt","centered","size","React","Component","NavBar","Menu","widths","color","inverted","Item","as","Link","to","ListSubItem","data","ListItem","id","className","Popup","trigger","onClick","window","location","href","map","x","index","content","RoutesList","state","routes","connection","getRoutes","bind","connectionError","getRoutesTomorrow","this","a","currentDay","Date","getDay","axios","get","console","log","setState","length","error","DateTime","local","zoneName","weekday","style","width","route","fromISO","departure","plus","minutes","name","toLocaleString","TIME_SIMPLE","arrival","fare","status","_id","loadingGif","getWeekDay","day","Travel","useState","uniqueStationList","setUniqueStationList","setDay","time","setTime","timeHour","setTimeHour","timeMinute","setTimeMinute","fromStation","setFromStation","toStation","setToStation","openToModal","setOpenToModal","openFromModal","setOpenFromModal","openDateModal","setOpenDateModal","trip","setTrip","setStatus","savedList","JSON","parse","localStorage","getItem","favouriteStations","setFavouriteStations","favouriteToggle","setFavouriteToggle","resetForm","resetTime","dt","fromJSDate","hour","minute","updateFavourites","station","includes","filter","arr","showList","type","Button","Group","fluid","floated","Number","path","useEffect","fetchData","setItem","stringify","fromObject","hours","startingStation","departureHour","departureMinute","endingStation","arrivalHour","arrivalMinute","diff","toObject","Modal","open","onClose","onOpen","Content","closeIcon","Form","Field","htmlFor","value","onChange","e","target","styleReset","split","err","primary","secondary","animated","visible","hidden","Icon","TravelStations","variant","Favourites","props","StationsTable","rowSpan","stationList","item","colSpan","codeList","code","line","RouteDetails","routeName","setRouteName","routeList","setRouteList","then","response","catch","Data","match","params","getFunction","stationList2","concat","self","indexOf","sort","b","NotificationItem","notice","onRemove","urgency","title","message","NotificationField","notificationList","setNotificationList","dismissedList","setDismissedList","notificationData","setNotificationData","handleRemove","nList","find","Routes","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1da7f77d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/classic_locomotive_train_312396.f217537d.jpg\";","import React from 'react';\r\nimport './Header.css';\r\nimport {Image} from 'semantic-ui-react';\r\nimport trainImg from './classic_locomotive_train_312396.jpg';\r\n\r\n// Javascript class rendering logo image\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Image src={trainImg} alt=\"train\" centered size=\"large\" /> \r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n/*import { Menu } from 'semantic-ui-react'*/\r\nimport {Link} from 'react-router-dom';\r\nimport {Menu} from 'semantic-ui-react';\r\n\r\n\r\n// Javascript class rendering navbar\r\nclass NavBar extends Component {\r\n    /*render() {\r\n        return (\r\n            <div className=\"\">\r\n           {/* Navbar Buttons }\r\n               <Button as={Link} to=\"/\">Routes</Button> \r\n               <Button as={Link} to=\"/travel\">Travel</Button> \r\n               <Button as={Link} to=\"/favourites\">Favourites</Button> \r\n            </div>\r\n        );\r\n    }*/\r\n    \r\n    render() {\r\n        return (\r\n            <Menu widths={2} color='green' inverted>\r\n                <Menu.Item as={Link} to='/'>Routes</Menu.Item>\r\n                <Menu.Item as={Link} to='/travel'>Travel</Menu.Item>\r\n                {/* <Menu.Item as={Link} to='/favourites'>Favourites</Menu.Item> */}\r\n            </Menu>\r\n        )\r\n    }\r\n    \r\n    /*state = {}\r\n\r\n    componentDidMount() {\r\n        this.setState({activeItem: 'routes'});\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n\r\n        return (\r\n          <Menu fluid widths={3}>\r\n            <Menu.Item\r\n              name='routes'\r\n              active={activeItem === 'routes'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              Routes\r\n            </Menu.Item>\r\n\r\n            <Menu.Item\r\n              name='travel'\r\n              active={activeItem === 'travel'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              Travel\r\n            </Menu.Item>\r\n\r\n            <Menu.Item\r\n              name='favourites'\r\n              active={activeItem === 'favourites'}\r\n              onClick={this.handleItemClick}\r\n            >\r\n              Favourites\r\n            </Menu.Item>\r\n          </Menu>\r\n        )\r\n    }*/\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\n// Returns route list subitem in RouteDetails.jsx\r\nconst ListSubItem = ({data}) => {\r\n    return (\r\n      <td>{data}</td>     \r\n  );\r\n}\r\n\r\nexport default ListSubItem;","import React from 'react';\r\nimport {ListSubItem} from '../ListSubItem';\r\nimport { Popup } from 'semantic-ui-react'\r\n\r\n// Route event handler to see all station schedule\r\nconst ListItem = ({id, className, data}) => {\r\n    return (\r\n        <Popup\r\n            trigger={<tr id={id} className={`routeRow ${className}`} onClick={()=>window.location.href = \"/route/\" + data[0]}>\r\n                {data.map((x, index)=> (\r\n                    <ListSubItem key={index + x} data={x} />\r\n                ))}\r\n            </tr>}\r\n            content=\"Click for daily schedule\"\r\n        />\r\n  );\r\n}\r\n\r\nexport default ListItem;","export default __webpack_public_path__ + \"static/media/animation_500_kknnq4t6.c8abf826.gif\";","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {DateTime} from 'luxon';\r\nimport {ListItem} from '../../components/ListItem';\r\nimport './RoutesList.css';\r\nimport loadingGif from './animation_500_kknnq4t6.gif'\r\n\r\nconst currency = '\\u20A6';\r\n\r\n// JS class rendering the Route page of the navbar\r\nclass RoutesList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            routes: [],\r\n            connection: 0\r\n        }\r\n        this.getRoutes = this.getRoutes.bind(this);\r\n        this.connectionError = this.connectionError.bind(this);\r\n        this.getRoutesTomorrow = this.getRoutesTomorrow.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getRoutes();\r\n    }\r\n    \r\n    // function returning route information for each day\r\n    async getRoutes() {\r\n        /*const sleep = (milliseconds) => {\r\n            return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n        }\r\n        await sleep(50000).then(() => {\r\n            \r\n        })*/\r\n        let currentDay = new Date().getDay();\r\n        let data;\r\n        try {\r\n            data = await axios\r\n                .get(`/routes/day/${currentDay}`)\r\n        }catch(error) {\r\n            console.log(error);\r\n        }\r\n        try {\r\n            this.setState({routes: data.data});\r\n            if (this.state.routes.length > 0) {\r\n                this.setState({connection: 1});\r\n            } else {\r\n                this.getRoutesTomorrow()\r\n                this.setState({connection: 2});\r\n            }\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({connection: -1});\r\n        } \r\n    }\r\n    \r\n    connectionError() {\r\n        console.log('error');\r\n    }\r\n    \r\n     // function returning tomorrow's route information if no more train\r\n     async getRoutesTomorrow() {\r\n        let currentDay = new Date().getDay();\r\n        let data;\r\n        try {\r\n            data = await axios\r\n                .get(`/routes/tomorrow/${currentDay===6 ? 0:currentDay+1}`)\r\n        }catch(error) {\r\n            console.log(error);\r\n        }\r\n        try {\r\n            this.setState({routes: data.data});\r\n        } catch(error) {\r\n            console.log(error);\r\n        } \r\n    }\r\n\r\n    // JSX rendering Route List information on Route page of the navbar\r\n    render() {\r\n        if (this.state.connection === -1) {\r\n            console.log('Error');\r\n            return (\r\n                <div className=\"ui container routesList\">\r\n                    <h2>Routes List Currently Unavailable</h2>\r\n                    <p>Please try again later. We apologize for the inconvenience.</p>\r\n                </div>\r\n            );\r\n        } else if (this.state.connection === 1) {\r\n            return (\r\n                <div className=\"ui container routesList\">\r\n                    <h2>Routes</h2>\r\n                    <h4>Schedule Timezone: {DateTime.local().zoneName}</h4>\r\n                    <h4>Next Available Trains:</h4>\r\n                    {console.log(DateTime.local().weekday)}\r\n                    <table style={{width:\"100%\"}}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Route</th>\r\n                                <th>Departure Time</th>\r\n                                <th>Arrival Time</th>\r\n                                <th>Fare</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.routes.map((route, index) => (\r\n                                <ListItem key={route._id} id={index} className={DateTime.fromISO(route.departure) <= DateTime.local().plus({minutes:15}) ? \"animate-flicker\" : \"\"} data={[route.name, DateTime.fromISO(route.departure).toLocaleString(DateTime.TIME_SIMPLE), DateTime.fromISO(route.arrival).toLocaleString(DateTime.TIME_SIMPLE), `${currency} ${route.fare}`, ...(DateTime.fromISO(route.departure) <= DateTime.local().plus({minutes:15}) ? [\"Departing Soon\" + \"/\" + route.status] : [route.status])]}/>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        } else if (this.state.connection === 2) {\r\n            return (\r\n                <div className=\"ui container routesList\">\r\n                    <h2>Routes</h2>\r\n                    <p>There are no more trains operating today. Displaying tomorrow's schedule. </p>\r\n                    <h4>Schedule Timezone: {DateTime.local().zoneName}</h4>\r\n                    <table style={{width:\"100%\"}}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Route</th>\r\n                                <th>Departure Time</th>\r\n                                <th>Arrival Time</th>\r\n                                <th>Fare</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.routes.map((route, index) => (\r\n                                <ListItem key={route._id} id={index} data={[route.name, DateTime.fromISO(route.departure).toLocaleString(DateTime.TIME_SIMPLE), DateTime.fromISO(route.arrival).toLocaleString(DateTime.TIME_SIMPLE), `${currency} ${route.fare}`, route.status]}/>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        } \r\n        else {\r\n            return (\r\n                <div className=\"ui container routesList\">\r\n                    <h2>Routes</h2>\r\n                    <img src={loadingGif} alt=\"loading train\" />\r\n                </div>\r\n            );\r\n        }  \r\n    }\r\n};\r\n\r\nexport default RoutesList;","export function getWeekDay(day) {      \r\n    switch(day) {\r\n        case 0:\r\n            return 'Sunday';\r\n        case 1:\r\n            return 'Monday';\r\n        case 2:\r\n            return 'Tuesday';\r\n        case 3:\r\n            return 'Wednesday';\r\n        case 4:\r\n            return 'Thursday';\r\n        case 5:\r\n            return 'Friday';\r\n        case 6:\r\n            return 'Saturday';\r\n        default:\r\n            return 'N/A';\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n//import GoogleMap from '../../components/GoogleMap';\r\nimport { Button, Icon, Modal, Form, Input, Image } from 'semantic-ui-react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DateTime } from 'luxon';\r\nimport TimePicker from 'react-time-picker';\r\nimport styleReset from './styleReset.css';\r\nimport { getWeekDay } from '../../utils/getWeekDay';\r\n\r\nconst Travel = () => {\r\n    const [uniqueStationList, setUniqueStationList] = React.useState([]);\r\n    const [day, setDay] = React.useState(new Date().getDay());\r\n    const [time, setTime] = React.useState('00:00');\r\n    const [timeHour, setTimeHour] = React.useState();\r\n    const [timeMinute, setTimeMinute] = React.useState();\r\n    const [fromStation, setFromStation] = React.useState('Station');\r\n    const [toStation, setToStation] = React.useState('Station');\r\n    const [dateOption, setDateOption] = React.useState(0);\r\n    const [openToModal, setOpenToModal] = React.useState(false);\r\n    const [openFromModal, setOpenFromModal] = React.useState(false);\r\n    const [openDateModal, setOpenDateModal] = React.useState(false);\r\n    const [trip, setTrip] = React.useState(false);\r\n    const [status, setStatus] = React.useState(0);\r\n    const savedList = JSON.parse(localStorage.getItem('savedList'));\r\n    const [favouriteStations, setFavouriteStations] = React.useState(savedList || ['Rigasa']);\r\n    const [favouriteToggle, setFavouriteToggle] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            let data;\r\n            try {\r\n                data = await axios\r\n                    .get('/stations/list/')\r\n                setUniqueStationList(data.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n        resetTime();\r\n    }, []);\r\n\r\n    function resetForm() {\r\n        setStatus(0);\r\n        setTrip([]);\r\n        setDay(new Date().getDay());\r\n        setFromStation('station');\r\n        setToStation('station');\r\n        resetTime();\r\n    }\r\n\r\n    function resetTime() {\r\n        let dt = DateTime.fromJSDate(new Date());\r\n        setTime(`${dt.hour}:${dt.minute}`);\r\n        setTimeHour(dt.hour);\r\n        setTimeMinute(dt.minute);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem('savedList', JSON.stringify(favouriteStations));\r\n    }, [favouriteStations]);\r\n\r\n    function updateFavourites(station) {\r\n        if (favouriteStations.includes(station)) {\r\n            setFavouriteStations(favouriteStations.filter(name => name !== station));\r\n        } else {\r\n            setFavouriteStations(arr => [...arr, station]);\r\n        }\r\n    }\r\n\r\n    function showList(type) {\r\n        try {\r\n            if (type === 'from') {\r\n                if (!favouriteToggle) {\r\n                    return (\r\n                        uniqueStationList.map((station, index) => (\r\n                            <div key={station + index}>\r\n                                <Button.Group fluid>\r\n                                    <Button\r\n                                        onClick={() => [setFromStation(station), setOpenFromModal(false), setFavouriteToggle(false)]}\r\n                                    >\r\n                                        {station}\r\n                                    </Button>\r\n\r\n                                    <Image floated='right' src={favouriteStations.includes(station) ? 'star1.png' : 'star.png'} size='mini' onClick={() => updateFavourites(station)} />\r\n                                </Button.Group>\r\n                                <br /><br />\r\n                            </div>\r\n                        ))\r\n                    );\r\n                } else {\r\n                    if (favouriteStations.length === 0) {\r\n                        return (\r\n                            <p>No item on Favourites Stations</p>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            favouriteStations.map((station, index) => (\r\n                                <div key={station + index}>\r\n                                    <Button.Group fluid>\r\n                                        <Button\r\n                                            onClick={() => [setFromStation(station), setOpenFromModal(false), setFavouriteToggle(false)]}\r\n                                        >\r\n                                            {station}\r\n                                        </Button>\r\n\r\n                                        <Image floated='right' src={favouriteStations.includes(station) ? 'star1.png' : 'star.png'} size='mini' onClick={() => updateFavourites(station)} />\r\n                                    </Button.Group>\r\n                                    <br /><br />\r\n                                </div>\r\n                            ))\r\n                        );\r\n                    }\r\n                }\r\n            } else {\r\n                if (!favouriteToggle) {\r\n                    return (\r\n                        uniqueStationList.map((station, index) => (\r\n                            <div key={station + index}>\r\n                                <Button.Group fluid>\r\n                                    <Button\r\n                                        onClick={() => [setToStation(station), setOpenToModal(false), setFavouriteToggle(false)]}\r\n                                    >\r\n                                        {station}\r\n                                    </Button>\r\n\r\n                                    <Image floated='right' src={favouriteStations.includes(station) ? 'star1.png' : 'star.png'} size='mini' onClick={() => updateFavourites(station)} />\r\n                                </Button.Group>\r\n                                <br /><br />\r\n                            </div>\r\n                        ))\r\n                    );\r\n                } else {\r\n                    if (favouriteStations.length === 0) {\r\n                        return (\r\n                            <p>No item on Favourites Stations</p>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            favouriteStations.map((station, index) => (\r\n                                <div key={station + index}>\r\n                                    <Button.Group fluid>\r\n                                        <Button\r\n                                            onClick={() => [setToStation(station), setOpenToModal(false), setFavouriteToggle(false)]}\r\n                                        >\r\n                                            {station}\r\n                                        </Button>\r\n\r\n                                        <Image floated='right' src={favouriteStations.includes(station) ? 'star1.png' : 'star.png'} size='mini' onClick={() => updateFavourites(station)} />\r\n                                    </Button.Group>\r\n                                    <br /><br />\r\n                                </div>\r\n                            ))\r\n                        );\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function getTrip() {\r\n        let data;\r\n        try {\r\n            data = await axios\r\n                .get(`/stations/trip/from/${fromStation}/to/${toStation}/day/${Number(day)}/hour/${timeHour}/minute/${timeMinute}`)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        let path = data.data;\r\n        setTrip(path);\r\n        setStatus(1);\r\n    }\r\n\r\n    if (!status) {\r\n        return (\r\n            <div>\r\n                <h2>Travel</h2>\r\n                <Modal\r\n                    open={openFromModal}\r\n                    trigger={<Button fluid>From: {fromStation}</Button>}\r\n                    onClose={() => [setOpenFromModal(false),setFavouriteToggle(false)]}\r\n                    onOpen={() => setOpenFromModal(true)}\r\n                >\r\n                    <Modal.Header>Select Station</Modal.Header> <br />\r\n                    <Button onClick={() => setFavouriteToggle(!favouriteToggle)}>{!favouriteToggle ? \"Select from Favourites\" : \"Select from All\"}</Button>\r\n                    <Modal.Content>\r\n                        {showList('from')}\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <hr />\r\n                <Modal\r\n                    open={openToModal}\r\n                    trigger={<Button fluid>To: {toStation}</Button>}\r\n                    onClose={() => [setOpenToModal(false),setFavouriteToggle(false)]}\r\n                    onOpen={() => setOpenToModal(true)}\r\n                >\r\n                    <Modal.Header>Select Station</Modal.Header> <br/>\r\n                    <Button onClick={() => setFavouriteToggle(!favouriteToggle)}>{!favouriteToggle ? \"Select from Favourites\" : \"Select from All\"}</Button>\r\n                    <Modal.Content>\r\n                        {showList('to')}\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <hr />\r\n                <Modal\r\n                    closeIcon\r\n                    open={openDateModal}\r\n                    trigger={<Button fluid>Depart On: {getWeekDay(Number(day))} at {DateTime.fromObject({ hours: timeHour, minutes: timeMinute }).toLocaleString(DateTime.TIME_SIMPLE)}</Button>}\r\n                    onClose={() => setOpenDateModal(false)}\r\n                    onOpen={() => setOpenDateModal(true)}\r\n                >\r\n                    <Modal.Header>Select Day and Time</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label htmlFor=\"day\">Day</label>\r\n                                <select id=\"day\" value={day} onChange={(e) => {\r\n                                    setDay(e.target.value);\r\n                                }}>\r\n                                    <option value={0}>Sunday</option>\r\n                                    <option value={1}>Monday</option>\r\n                                    <option value={2}>Tuesday</option>\r\n                                    <option value={3}>Wednesday</option>\r\n                                    <option value={4}>Thursday</option>\r\n                                    <option value={5}>Friday</option>\r\n                                    <option value={6}>Saturday</option>\r\n                                </select>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label htmlFor=\"time\">Time</label>\r\n                                <TimePicker\r\n                                    style={styleReset}\r\n                                    id=\"time\"\r\n                                    value={time}\r\n                                    onChange={(e) => {\r\n                                        let [hours, minutes] = [0, 0];\r\n                                        try {\r\n                                            [hours, minutes] = e.split(':');\r\n\r\n                                        } catch (err) {\r\n                                            [hours, minutes] = [0, 0];\r\n                                        }\r\n                                        setTime(e);\r\n                                        setTimeHour(hours);\r\n                                        setTimeMinute(minutes);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                <Button primary onClick={() => setOpenDateModal(false)}>Confirm</Button>\r\n                                <Button secondary onClick={() => [setDay(new Date().getDay()), resetTime()]}>Reset</Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <hr />\r\n                <Button fluid animated='vertical' onClick={(getTrip)}>\r\n                    <Button.Content visible>Find</Button.Content>\r\n                    <Button.Content hidden>\r\n                        <Icon name='arrow down' />\r\n                    </Button.Content>\r\n                </Button>\r\n            </div>\r\n        );\r\n    } else {\r\n        if (trip.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h2>Travel</h2>\r\n                    <h4>From: {fromStation}</h4>\r\n                    <h4>To: {toStation}</h4>\r\n                    <p>Departing On: {getWeekDay(Number(day))}, {DateTime.fromObject({ hours: timeHour, minutes: timeMinute }).toLocaleString(DateTime.TIME_SIMPLE)}</p>\r\n                    <table style={{ width: \"100%\" }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Departing</th>\r\n                                <th>Arriving</th>\r\n                                <th>Duration</th>\r\n                                <th>Fare*</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {trip.map((station, index) => (\r\n                                <tr key={station._id}>\r\n                                    <td>{station.startingStation} {DateTime.fromObject({ hour: station.departureHour, minute: station.departureMinute }).toLocaleString(DateTime.TIME_SIMPLE)}</td>\r\n                                    <td>{station.endingStation} {DateTime.fromObject({ hour: station.arrivalHour, minute: station.arrivalMinute }).toLocaleString(DateTime.TIME_SIMPLE)}</td>\r\n                                    <td>{DateTime.fromObject({ hour: station.arrivalHour, minute: station.arrivalMinute }).diff(DateTime.fromObject({ hour: station.departureHour, minute: station.departureMinute }), ['hours', 'minutes']).toObject().hours}hr {DateTime.fromObject({ hour: station.arrivalHour, minute: station.arrivalMinute }).diff(DateTime.fromObject({ hour: station.departureHour, minute: station.departureMinute }), ['hours', 'minutes']).toObject().minutes}min </td>\r\n                                    <td>{station.fare}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <br />\r\n                    <p>* Fares are typically for an entire route. Please consult your ticket vendor for final fare</p>\r\n                    <Button onClick={resetForm}>Plan Another Trip</Button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h2>Travel</h2>\r\n                    <h4>From: {fromStation}</h4>\r\n                    <h4>To: {toStation}</h4>\r\n                    <p>Departing At: {getWeekDay(Number(day))}, {DateTime.fromObject({ hours: timeHour, minutes: timeMinute }).toLocaleString(DateTime.TIME_SIMPLE)}</p>\r\n                    <p>I'm sorry, but this trip is not possible at this time and day. Please pick another time, day or select different stations</p>\r\n                    <br />\r\n                    <Button onClick={resetForm}>Plan Another Trip</Button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport default Travel;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\n\r\nclass TravelStations extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <h3>Travel View</h3> \r\n        \r\n      <Button variant=\"contained\">My Favourites</Button>\r\n    \r\n         <Button variant=\"contained\">From Map</Button> <hr/> <br/><br/><br/>\r\n         <h3>Travel View</h3>\r\n         <Button>Abuja (Idu)   </Button> <hr/>\r\n         <Button>ABUJA (Kubwa)       </Button> <hr/>\r\n         <Button>Kaduna (Rigasa)     </Button> <hr/> <br/><br/><br/>\r\n         \r\n         \r\n         \r\n         {/* \r\n         <Button color=\"primary\">To:    Station</Button> <hr/>\r\n         <Button color=\"secondary\">Depart At:    Now</Button> <hr/>\r\n         <Button disabled>Disabled</Button>\r\n         <Button href=\"#text-buttons\" color=\"primary\">Link</Button> */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n};\r\n\r\nexport default TravelStations;","import React from 'react';\r\n\r\n// JS class rendering the Favourite page of the navbar\r\nconst Favourites = props => {\r\n  return (\r\n    <div>\r\n      <h3>Favourites View</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {DateTime} from 'luxon';\r\n \r\n //  Separate react component to display station schedule for each day in rows\r\n const StationsTable = function (props) {\r\n    console.log(\"Station Table is running\");\r\n    return (\r\n        <table style={{width:\"100%\"}}>\r\n            <tbody>\r\n               <tr>\r\n                  <th rowSpan=\"2\">Code</th>\r\n                    {props.stationList.map((item, index) => (\r\n                        index > 0 && index < props.stationList.length-1 ? <th colSpan=\"2\">{item}</th> :  <th>{item}</th>\r\n                    ))}\r\n               </tr>\r\n               <tr>\r\n                   {props.stationList.map((item, index) => (\r\n                        index === 0 ? <td>Departure</td> : index === props.stationList.length-1 ? <td>Arrival</td> : [<td>Arrival</td>,<td>Departure</td>]\r\n                    ))}\r\n               </tr>\r\n               {props.codeList.map((code) => (\r\n                    <tr>\r\n                        <td>{code}</td>\r\n                        {props.route.filter((line) => line.code === code).map((item, index) => (\r\n                            [<td>{DateTime.fromObject({hour: item.departureHour, minute: item.departureMinute}).toLocaleString(DateTime.TIME_SIMPLE)}</td>,<td>{DateTime.fromObject({hour: item.arrivalHour, minute: item.arrivalMinute}).toLocaleString(DateTime.TIME_SIMPLE)}</td>]\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default StationsTable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {DateTime} from 'luxon';\r\nimport RouteDetail from '../RouteDetail';\r\nimport StationsTable from './StationsTable'; \r\n\r\n\r\n    // Conect axios to stations route in database\r\n\r\n\r\n\r\nconst RouteDetails = (props) => {\r\n    const [routeName, setRouteName] = React.useState();\r\n    const [routeList, setRouteList] = React.useState([]);\r\n    \r\n    React.useEffect(() => {\r\n        setRouteName(props.match.params.name);\r\n        \r\n        async function fetchData (){\r\n           let Data=await axios\r\n           .get('/stations/')\r\n           .then(function(response) {\r\n               return response;\r\n           }).catch(function(error) {\r\n               console.log(error); \r\n           });\r\n          try {\r\n            setRouteList(Data.data) \r\n          }catch(error){}\r\n        }\r\n        fetchData()\r\n      \r\n\r\n    }, [props.match.params.name]);\r\n    \r\n// Return current day of the week\r\n    const days = [0,1,2,3,4,5,6];\r\n\r\n    function getDay(day) {\r\n        \r\n        switch(day) {\r\n            case 0:\r\n                return 'Sunday';\r\n            case 1:\r\n                return 'Monday';\r\n            case 2:\r\n                return 'Tuesday';\r\n            case 3:\r\n                return 'Wednesday';\r\n            case 4:\r\n                return 'Thursday';\r\n            case 5:\r\n                return 'Friday';\r\n            case 6:\r\n                return 'Saturday';\r\n        }\r\n        \r\n    }\r\n    \r\n    // concatenate station list to display on the same row\r\n    function getFunction(route) {\r\n        if (route.length === 0){\r\n            return (\r\n                <p>No Trips Today</p>\r\n            );\r\n        } else {\r\n            let stationList = route.map((item, index) => item.startingStation);\r\n            let stationList2 = route.map((item, index) => item.endingStation);\r\n            stationList = stationList.concat(stationList2);\r\n            stationList = stationList.filter((value, index, self) => (\r\n                self.indexOf(value) === index\r\n            ));\r\n            let codeList = route.map((item, index) => item.code);\r\n            codeList = codeList.filter((value, index, self) => (\r\n                self.indexOf(value) === index\r\n            ));\r\n            console.log(DateTime.fromObject({weekday:0}).toLocaleString());\r\n          \r\n            // calls StationsTable.js as a separate component\r\n            return(\r\n           <StationsTable stationList={stationList} codeList={codeList} route={route} />\r\n            )\r\n        }\r\n    }\r\n    \r\n    // Display station list\r\n    return (\r\n        <div>\r\n            <h1>{routeName}</h1>\r\n            {days.map((day) => (\r\n                <div>\r\n                    <h1>{getDay(day)}</h1>\r\n                    {getFunction(routeList.filter((route) => route.name === routeName).filter((route) => route.day === day).sort((a, b) => a.departureHour-b.departureHour || a.departureMinute-b.departureMinute))}\r\n                </div>\r\n            ))}  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouteDetails;","import React from 'react';\r\nimport './Notification.css';\r\n\r\n// Notification component of route details\r\nconst NotificationItem = ({notice, onRemove}) => {\r\n    return (\r\n        <div className={'notice-'+notice.urgency}>\r\n            <h3>{notice.title}</h3>\r\n            <p>{notice.message}</p>\r\n            <button className=\"xButton\" type=\"button\" onClick={()=>onRemove(notice._id)}>X</button>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default NotificationItem;","import React from 'react';\r\nimport axios from 'axios';\r\nimport NotificationItem from './NotificationItem';\r\n\r\nconst NotificationField = () => {\r\n    // Set states\r\n    // Set notificationList to empty\r\n    const [notificationList, setNotificationList] = React.useState([]);\r\n    // Get the list of dismissed notification IDs\r\n    const savedList = JSON.parse(localStorage.getItem('dismissedList'));\r\n    // Set dismissedList to either savedList or empty list\r\n    const [dismissedList, setDismissedList] = React.useState(savedList || []);\r\n\r\n     const [notificationData, setNotificationData] = React.useState([]);\r\n    // componentDidMount() method\r\n    React.useEffect(() => {\r\n        // Get notifications from server\r\n        async function fetchData() {\r\n            let data\r\n            try {\r\n                data = await axios\r\n                    .get('/notifications/')\r\n            } catch (error) {\r\n                console.log(error);\r\n            };\r\n            setNotificationData(data);\r\n        }\r\n        // Actually call the fetch function\r\n        fetchData();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        // Try catch block is intended to deal with no server error\r\n        try {\r\n            // Go through dismissedList and filter out any notifications that the client has already dismissed\r\n            // Set notificationList state to data retrieved from server\r\n            setNotificationList(notificationData.data.filter(notice => !dismissedList.includes(notice._id)));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [notificationData, dismissedList]);\r\n\r\n    // Function for dismissing a notification\r\n    function handleRemove(id) {\r\n        // Filter out any notification containing the specified id\r\n        const nList = notificationList.filter(notice => notice._id !== id);\r\n        // update notificationList state with filtered list\r\n        setNotificationList(nList);\r\n        // Add dismissed ID to dismissedList; this will trigger a useEffect\r\n        setDismissedList(dismissedList.concat(notificationList.find(notice => notice._id === id)._id));\r\n    }\r\n    // useEffect that triggers when dismissedList updates\r\n    React.useEffect(() => {\r\n        // Store dismissedList into localStorage\r\n        localStorage.setItem('dismissedList', JSON.stringify(dismissedList));\r\n    }, [dismissedList]);\r\n\r\n    return (\r\n        <div> {\r\n            notificationList.map((notice, index) => ( <\r\n                NotificationItem key = {\r\n                    'notice-' + index\r\n                }\r\n                notice = {\r\n                    notice\r\n                }\r\n                onRemove = {\r\n                    handleRemove\r\n                }\r\n                />\r\n            ))\r\n        } \r\n       </div>\r\n    );\r\n}\r\n\r\nexport default NotificationField;\r\n","import React from 'react';\r\nimport {Header} from './components/Header';\r\nimport {NavBar} from './components/NavBar';\r\nimport {RoutesList} from './views/RoutesList';\r\nimport {Travel} from './views/Travel';\r\nimport {TravelStations} from './views/Travel';\r\nimport {Favourites} from './views/Favourites';\r\nimport {RouteDetails} from './components/RouteDetails';\r\nimport NotificationField from './components/NotificationField';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport './routes.css';\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <div className=\"ui segment\">\r\n        <Header />\r\n        <NotificationField />\r\n        <Switch>\r\n            <Route exact path=\"/\" component={RoutesList} />\r\n            <Route exact path=\"/\">\r\n                <Redirect to=\"/\" />\r\n            </Route>\r\n            <Route exact path=\"/travel\" component={Travel} />\r\n            <Route exact path=\"/travelstations\" component={TravelStations} />\r\n            <Route exact path=\"/favourites\" component={Favourites} />\r\n            <Route path=\"/route/:name\" component={RouteDetails}/>\r\n        </Switch>\r\n        <NavBar />\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n/*import './App.css';*/\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {Routes} from './routes';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Router>\r\n                <Routes/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}