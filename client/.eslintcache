[{"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\routes.js":"4","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NotificationField.jsx":"5","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NavBar\\index.js":"6","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\RouteDetails\\index.js":"7","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\RoutesList\\index.js":"9","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Travel\\index.js":"10","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Favourites\\index.js":"11","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NotificationItem.jsx":"12","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\RoutesList\\RoutesList.js":"13","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\RouteDetails\\RouteDetails.jsx":"14","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NavBar\\NavBar.jsx":"15","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\Header\\Header.jsx":"16","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Travel\\Travel.jsx":"17","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Favourites\\Favourites.jsx":"18","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListItem\\index.js":"19","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListSubItem\\index.js":"20","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListItem\\ListItem.jsx":"21","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListSubItem\\ListSubItem.jsx":"22"},{"size":517,"mtime":1611361831948,"results":"23","hashOfConfig":"24"},{"size":1455,"mtime":1611361831937,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1611361831949,"results":"26","hashOfConfig":"24"},{"size":1320,"mtime":1611371258418,"results":"27","hashOfConfig":"24"},{"size":368,"mtime":1611361831945,"results":"28","hashOfConfig":"24"},{"size":45,"mtime":1611361831944,"results":"29","hashOfConfig":"24"},{"size":57,"mtime":1611361831947,"results":"30","hashOfConfig":"24"},{"size":45,"mtime":1611361831940,"results":"31","hashOfConfig":"24"},{"size":53,"mtime":1611361831954,"results":"32","hashOfConfig":"24"},{"size":45,"mtime":1611361831955,"results":"33","hashOfConfig":"24"},{"size":53,"mtime":1611361831953,"results":"34","hashOfConfig":"24"},{"size":275,"mtime":1611361831946,"results":"35","hashOfConfig":"24"},{"size":3992,"mtime":1611379678274,"results":"36","hashOfConfig":"24"},{"size":5469,"mtime":1611361831946,"results":"37","hashOfConfig":"24"},{"size":1514,"mtime":1611361831944,"results":"38","hashOfConfig":"24"},{"size":446,"mtime":1611361831939,"results":"39","hashOfConfig":"24"},{"size":154,"mtime":1611361831955,"results":"40","hashOfConfig":"24"},{"size":222,"mtime":1611361831952,"results":"41","hashOfConfig":"24"},{"size":49,"mtime":1611361831941,"results":"42","hashOfConfig":"24"},{"size":55,"mtime":1611361831942,"results":"43","hashOfConfig":"24"},{"size":839,"mtime":1611361831940,"results":"44","hashOfConfig":"24"},{"size":203,"mtime":1611361831942,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1d5nzz9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\index.js",[],["95","96"],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\App.js",["97"],"import React from 'react';\r\nimport logo from './logo.svg';\r\n/*import './App.css';*/\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {Routes} from './routes';\r\n\r\nfunction App() {\r\n    \r\n    \r\n    return (\r\n        <div className=\"ui container\">\r\n            <Router>\r\n                <Routes />\r\n            </Router>\r\n        </div>\r\n    );\r\n    \r\n    /*const [word, setWord] = React.useState('software');\r\n    const [associations, setAssociations] = React.useState(null);\r\n    const getAssociations = () => {\r\n        fetch('/api/associations/' + word)\r\n            .then(result => result.json())\r\n            .then(body => setAssociations(body));\r\n    };\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Word Associations Map</h1>\r\n            <input value={word} onChange={e => setWord(e.target.value)} />\r\n            <button onClick={getAssociations}>Find Associations</button>\r\n               {associations && (\r\n                Object.keys(associations).length === 0\r\n                ? <p>No results</p>\r\n                : <div>\r\n                {Object.entries(associations).map(([association, score]) => (\r\n                        <span style={{ fontSize: Math.pow(score, 2) / 200 }}>\r\n                        {association}\r\n                        {' '}\r\n                        </span>\r\n                    ))}\r\n                    </div>\r\n            )}\r\n            </div>\r\n    );*/\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\routes.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NotificationField.jsx",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NavBar\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\RouteDetails\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\RoutesList\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Travel\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Favourites\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NotificationItem.jsx",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\RoutesList\\RoutesList.js",["98","99"],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\RouteDetails\\RouteDetails.jsx",["100"],"import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\n// JS Class rendering route information for each train line\r\nclass RouteDetails extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        // This line of code can grab the :name varable from the url\r\n        let name = this.props.match.params.name;\r\n\r\n        // To obtain the exact weekday as a string.\r\n        let currentDay = new Date().getDay();\r\n\r\n        let weekdays = new Array(7);\r\n        weekdays[0] = \"Sunday\";\r\n        weekdays[1] = \"Monday\";\r\n        weekdays[2] = \"Tuesday\";\r\n        weekdays[3] = \"Wednesday\";\r\n        weekdays[4] = \"Thursday\";\r\n        weekdays[5] = \"Friday\";\r\n        weekdays[6] = \"Saturday\";\r\n\r\n        // Returns schedule for Monday - Saturday, else returns Sunday which is day 0.\r\n        if (currentDay > 0) {\r\n            return (\r\n                <div>\r\n                    {/* Display Route Name */}\r\n                    <h1>{name}</h1>\r\n                    {/* Display the exct weekday as a string. If there isn't a route scheduled on a certain day, either skip that weekday or display a message like \"No service on {day}\" */}\r\n                    {/* <p>Weekday</p> */}\r\n                    <h2>{weekdays[currentDay]}</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th rowSpan=\"2\">Train Code</th>\r\n                                {/* From here we provide a variable number of stations each with a departure and arrival time except for the first and last stations. The first station would only have departure and the last will only have arrival */}\r\n                                <th>Rigasa</th>\r\n                                <th colSpan=\"2\">Kubwa</th>\r\n                                <th>Idu</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Departure</td>\r\n                                <td>Arrival</td>\r\n                                <td>Departure</td>\r\n                                <td>Arrival</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>KA1</td>\r\n                                <td>6:40 AM</td>\r\n                                <td>8:28 AM</td>\r\n                                <td>8:31 AM</td>\r\n                                <td>8:43 AM</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>KA2</td>\r\n                                <td>10:35 AM</td>\r\n                                <td>12:59 PM</td>\r\n                                <td>1:04 PM</td>\r\n                                <td>1:20 PM</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>KA3</td>\r\n                                <td>2:00 PM</td>\r\n                                <td>3:58 PM</td>\r\n                                <td>4:03 PM</td>\r\n                                <td>4:16 PM</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>KA4</td>\r\n                                <td>6:00 PM</td>\r\n                                <td>8:04 PM</td>\r\n                                <td>8:07 PM</td>\r\n                                <td>8:20 PM</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                {/* Display Route Name */}\r\n                <h1>{name}</h1>\r\n                {/* Display the exct weekday as a string. If there isn't a route scheduled on a certain day, either skip that weekday or display a message like \"No service on {day}\" */}\r\n                {/* <p>Weekday</p> */}\r\n                <h2>{weekdays[currentDay]}</h2>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th rowSpan=\"2\">Train Code</th>\r\n                            {/* From here we provide a variable number of stations each with a departure and arrival time except for the first and last stations. The first station would only have departure and the last will only have arrival */}\r\n                            <th>Rigasa</th>\r\n                            <th colSpan=\"2\">Kubwa</th>\r\n                            <th>Idu</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Departure</td>\r\n                            <td>Arrival</td>\r\n                            <td>Departure</td>\r\n                            <td>Arrival</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>KA1</td>\r\n                            <td>1:00 PM</td>\r\n                            <td>2:49 PM</td>\r\n                            <td>2:54 PM</td>\r\n                            <td>3:06 PM</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>KA2</td>\r\n                            <td>4:00 PM</td>\r\n                            <td>6:02 PM</td>\r\n                            <td>6:07 PM</td>\r\n                            <td>6:21 PM</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )\r\n        };\r\n    }\r\n}\r\n\r\nexport default RouteDetails;","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\NavBar\\NavBar.jsx",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\Header\\Header.jsx",["101"],"import React from 'react';\r\nimport './Header.css';\r\n\r\n// Javascript class rendering logo image\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img \r\n                    src=\"https://img1.pnghut.com/19/9/15/ZWiBE3Vx8j/car-rapid-transit-automotive-design-freight-transport-new-york-city-subway.jpg\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Travel\\Travel.jsx",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\views\\Favourites\\Favourites.jsx",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListItem\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListSubItem\\index.js",[],"C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListItem\\ListItem.jsx",["102"],"import React from 'react';\r\nimport {ListSubItem} from '../ListSubItem';\r\nimport {DateTime} from 'luxon';\r\n\r\n// Route event handler\r\nconst ListItem = ({id, data}) => {\r\n    return (\r\n        <tr id={id} className=\"routeRow\" onClick={()=>window.location.href = \"/route/\" + data[0]}>\r\n            {data.map((x, index)=> (\r\n                <ListSubItem key={index} data={x} />\r\n            ))}\r\n        </tr>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListItem;\r\n\r\n/*<ListSubItem data={data.name}/>\r\n                <ListSubItem data={DateTime.fromObject({hour: data.departureHour, minute: data.departureMinute}).toLocaleString(DateTime.TIME_SIMPLE)}/>\r\n                <ListSubItem data={DateTime.fromObject({hour: data.arrivalHour, minute: data.arrivalMinute}).toLocaleString(DateTime.TIME_SIMPLE)}/>\r\n                <ListSubItem data={data.fare}/>*/","C:\\Users\\admin\\Desktop\\Rail-Way\\client\\src\\components\\ListSubItem\\ListSubItem.jsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":15},{"ruleId":"107","severity":1,"message":"112","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":21},{"ruleId":"107","severity":1,"message":"113","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":9,"column":17,"nodeType":"116","endLine":11,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":3,"column":9,"nodeType":"109","messageId":"110","endLine":3,"endColumn":17},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'ListSubItem' is defined but never used.","'queryString' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DateTime' is defined but never used.","no-global-assign","no-unsafe-negation"]